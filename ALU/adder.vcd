$date
	Thu Nov 18 21:52:55 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_adder32bit $end
$var wire 32 ! Sum [31:0] $end
$var wire 1 " Cout $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 1 % Cin $end
$scope module u_adder4bit $end
$var wire 32 & A [31:0] $end
$var wire 32 ' B [31:0] $end
$var wire 1 % Cin $end
$var wire 32 ( Sum [31:0] $end
$var wire 1 " Cout $end
$var wire 8 ) C [7:0] $end
$scope module adder4bit0 $end
$var wire 4 * A [3:0] $end
$var wire 4 + B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 , Sum [3:0] $end
$var wire 4 - P [3:0] $end
$var wire 4 . G [3:0] $end
$var wire 1 / Cout $end
$var wire 4 0 C [3:0] $end
$scope module adder0 $end
$var wire 1 1 Ai $end
$var wire 1 2 Bi $end
$var wire 1 % Cin $end
$var wire 1 3 Gi $end
$var wire 1 4 Pi $end
$var wire 1 5 Sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 6 Ai $end
$var wire 1 7 Bi $end
$var wire 1 8 Cin $end
$var wire 1 9 Gi $end
$var wire 1 : Pi $end
$var wire 1 ; Sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 < Ai $end
$var wire 1 = Bi $end
$var wire 1 > Cin $end
$var wire 1 ? Gi $end
$var wire 1 @ Pi $end
$var wire 1 A Sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 B Ai $end
$var wire 1 C Bi $end
$var wire 1 D Cin $end
$var wire 1 E Gi $end
$var wire 1 F Pi $end
$var wire 1 G Sum $end
$upscope $end
$upscope $end
$scope module adder4bit1 $end
$var wire 4 H A [3:0] $end
$var wire 4 I B [3:0] $end
$var wire 1 J Cin $end
$var wire 4 K Sum [3:0] $end
$var wire 4 L P [3:0] $end
$var wire 4 M G [3:0] $end
$var wire 1 N Cout $end
$var wire 4 O C [3:0] $end
$scope module adder0 $end
$var wire 1 P Ai $end
$var wire 1 Q Bi $end
$var wire 1 J Cin $end
$var wire 1 R Gi $end
$var wire 1 S Pi $end
$var wire 1 T Sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 U Ai $end
$var wire 1 V Bi $end
$var wire 1 W Cin $end
$var wire 1 X Gi $end
$var wire 1 Y Pi $end
$var wire 1 Z Sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 [ Ai $end
$var wire 1 \ Bi $end
$var wire 1 ] Cin $end
$var wire 1 ^ Gi $end
$var wire 1 _ Pi $end
$var wire 1 ` Sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 a Ai $end
$var wire 1 b Bi $end
$var wire 1 c Cin $end
$var wire 1 d Gi $end
$var wire 1 e Pi $end
$var wire 1 f Sum $end
$upscope $end
$upscope $end
$scope module adder4bit2 $end
$var wire 4 g A [3:0] $end
$var wire 4 h B [3:0] $end
$var wire 1 i Cin $end
$var wire 4 j Sum [3:0] $end
$var wire 4 k P [3:0] $end
$var wire 4 l G [3:0] $end
$var wire 1 m Cout $end
$var wire 4 n C [3:0] $end
$scope module adder0 $end
$var wire 1 o Ai $end
$var wire 1 p Bi $end
$var wire 1 i Cin $end
$var wire 1 q Gi $end
$var wire 1 r Pi $end
$var wire 1 s Sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 t Ai $end
$var wire 1 u Bi $end
$var wire 1 v Cin $end
$var wire 1 w Gi $end
$var wire 1 x Pi $end
$var wire 1 y Sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 z Ai $end
$var wire 1 { Bi $end
$var wire 1 | Cin $end
$var wire 1 } Gi $end
$var wire 1 ~ Pi $end
$var wire 1 !" Sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 "" Ai $end
$var wire 1 #" Bi $end
$var wire 1 $" Cin $end
$var wire 1 %" Gi $end
$var wire 1 &" Pi $end
$var wire 1 '" Sum $end
$upscope $end
$upscope $end
$scope module adder4bit3 $end
$var wire 4 (" A [3:0] $end
$var wire 4 )" B [3:0] $end
$var wire 1 *" Cin $end
$var wire 4 +" Sum [3:0] $end
$var wire 4 ," P [3:0] $end
$var wire 4 -" G [3:0] $end
$var wire 1 ." Cout $end
$var wire 4 /" C [3:0] $end
$scope module adder0 $end
$var wire 1 0" Ai $end
$var wire 1 1" Bi $end
$var wire 1 *" Cin $end
$var wire 1 2" Gi $end
$var wire 1 3" Pi $end
$var wire 1 4" Sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 5" Ai $end
$var wire 1 6" Bi $end
$var wire 1 7" Cin $end
$var wire 1 8" Gi $end
$var wire 1 9" Pi $end
$var wire 1 :" Sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 ;" Ai $end
$var wire 1 <" Bi $end
$var wire 1 =" Cin $end
$var wire 1 >" Gi $end
$var wire 1 ?" Pi $end
$var wire 1 @" Sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 A" Ai $end
$var wire 1 B" Bi $end
$var wire 1 C" Cin $end
$var wire 1 D" Gi $end
$var wire 1 E" Pi $end
$var wire 1 F" Sum $end
$upscope $end
$upscope $end
$scope module adder4bit4 $end
$var wire 4 G" A [3:0] $end
$var wire 4 H" B [3:0] $end
$var wire 1 I" Cin $end
$var wire 4 J" Sum [3:0] $end
$var wire 4 K" P [3:0] $end
$var wire 4 L" G [3:0] $end
$var wire 1 M" Cout $end
$var wire 4 N" C [3:0] $end
$scope module adder0 $end
$var wire 1 O" Ai $end
$var wire 1 P" Bi $end
$var wire 1 I" Cin $end
$var wire 1 Q" Gi $end
$var wire 1 R" Pi $end
$var wire 1 S" Sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 T" Ai $end
$var wire 1 U" Bi $end
$var wire 1 V" Cin $end
$var wire 1 W" Gi $end
$var wire 1 X" Pi $end
$var wire 1 Y" Sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 Z" Ai $end
$var wire 1 [" Bi $end
$var wire 1 \" Cin $end
$var wire 1 ]" Gi $end
$var wire 1 ^" Pi $end
$var wire 1 _" Sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 `" Ai $end
$var wire 1 a" Bi $end
$var wire 1 b" Cin $end
$var wire 1 c" Gi $end
$var wire 1 d" Pi $end
$var wire 1 e" Sum $end
$upscope $end
$upscope $end
$scope module adder4bit5 $end
$var wire 4 f" A [3:0] $end
$var wire 4 g" B [3:0] $end
$var wire 1 h" Cin $end
$var wire 4 i" Sum [3:0] $end
$var wire 4 j" P [3:0] $end
$var wire 4 k" G [3:0] $end
$var wire 1 l" Cout $end
$var wire 4 m" C [3:0] $end
$scope module adder0 $end
$var wire 1 n" Ai $end
$var wire 1 o" Bi $end
$var wire 1 h" Cin $end
$var wire 1 p" Gi $end
$var wire 1 q" Pi $end
$var wire 1 r" Sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 s" Ai $end
$var wire 1 t" Bi $end
$var wire 1 u" Cin $end
$var wire 1 v" Gi $end
$var wire 1 w" Pi $end
$var wire 1 x" Sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 y" Ai $end
$var wire 1 z" Bi $end
$var wire 1 {" Cin $end
$var wire 1 |" Gi $end
$var wire 1 }" Pi $end
$var wire 1 ~" Sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 !# Ai $end
$var wire 1 "# Bi $end
$var wire 1 ## Cin $end
$var wire 1 $# Gi $end
$var wire 1 %# Pi $end
$var wire 1 &# Sum $end
$upscope $end
$upscope $end
$scope module adder4bit6 $end
$var wire 4 '# A [3:0] $end
$var wire 4 (# B [3:0] $end
$var wire 1 )# Cin $end
$var wire 4 *# Sum [3:0] $end
$var wire 4 +# P [3:0] $end
$var wire 4 ,# G [3:0] $end
$var wire 1 -# Cout $end
$var wire 4 .# C [3:0] $end
$scope module adder0 $end
$var wire 1 /# Ai $end
$var wire 1 0# Bi $end
$var wire 1 )# Cin $end
$var wire 1 1# Gi $end
$var wire 1 2# Pi $end
$var wire 1 3# Sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 4# Ai $end
$var wire 1 5# Bi $end
$var wire 1 6# Cin $end
$var wire 1 7# Gi $end
$var wire 1 8# Pi $end
$var wire 1 9# Sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 :# Ai $end
$var wire 1 ;# Bi $end
$var wire 1 <# Cin $end
$var wire 1 =# Gi $end
$var wire 1 ># Pi $end
$var wire 1 ?# Sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 @# Ai $end
$var wire 1 A# Bi $end
$var wire 1 B# Cin $end
$var wire 1 C# Gi $end
$var wire 1 D# Pi $end
$var wire 1 E# Sum $end
$upscope $end
$upscope $end
$scope module adder4bit7 $end
$var wire 4 F# A [3:0] $end
$var wire 4 G# B [3:0] $end
$var wire 1 H# Cin $end
$var wire 4 I# Sum [3:0] $end
$var wire 4 J# P [3:0] $end
$var wire 4 K# G [3:0] $end
$var wire 1 L# Cout $end
$var wire 4 M# C [3:0] $end
$scope module adder0 $end
$var wire 1 N# Ai $end
$var wire 1 O# Bi $end
$var wire 1 H# Cin $end
$var wire 1 P# Gi $end
$var wire 1 Q# Pi $end
$var wire 1 R# Sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 S# Ai $end
$var wire 1 T# Bi $end
$var wire 1 U# Cin $end
$var wire 1 V# Gi $end
$var wire 1 W# Pi $end
$var wire 1 X# Sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 Y# Ai $end
$var wire 1 Z# Bi $end
$var wire 1 [# Cin $end
$var wire 1 \# Gi $end
$var wire 1 ]# Pi $end
$var wire 1 ^# Sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 _# Ai $end
$var wire 1 `# Bi $end
$var wire 1 a# Cin $end
$var wire 1 b# Gi $end
$var wire 1 c# Pi $end
$var wire 1 d# Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
b0 M#
0L#
b0 K#
b0 J#
b0 I#
0H#
b0 G#
b0 F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
b0 .#
0-#
b0 ,#
b0 +#
b0 *#
0)#
b0 (#
b0 '#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
b0 m"
0l"
b0 k"
b0 j"
b0 i"
0h"
b0 g"
b0 f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
b0 N"
0M"
b0 L"
b0 K"
b0 J"
0I"
b0 H"
b0 G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
b0 /"
0."
b0 -"
b0 ,"
b0 +"
0*"
b0 )"
b0 ("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
b0 n
0m
b0 l
b0 k
b0 j
0i
b0 h
b0 g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
1Z
0Y
0X
1W
0V
0U
0T
0S
1R
1Q
1P
b1 O
0N
b1 M
b0 L
b10 K
0J
b1 I
b1 H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
b0 0
0/
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b100000 (
b10000 '
b10000 &
0%
b10000 $
b10000 #
0"
b100000 !
$end
#10
b1 j
1s
b100100001 !
b100100001 (
b1 ,
15
b1 k
1r
b1 -
14
1p
11
b1 h
b1 *
b100010000 $
b100010000 '
b10001 #
b10001 &
#20
0Z
0W
b0 O
1;
b1 K
1T
18
b0 -
04
b1 .
13
b1 L
1S
b0 M
0R
b1 0
12
0P
b100010011 !
b100010011 (
b11 ,
15
b1 +
b0 H
1%
b100010001 $
b100010001 '
b1 #
b1 &
#30
1;
b10 +"
1:"
18
17"
b1 0
b1 /"
b10000100010010 !
b10000100010010 (
b10 ,
05
b1 -
14
b0 .
03
b1 -"
12"
11"
01
10"
b1 )"
b0 *
b1 ("
b1000100010001 $
b1000100010001 '
b1000000000000 #
b1000000000000 &
#40
1r"
1h"
1M"
1b"
1\"
1Z
1W
1V"
b1 O
b1111 N"
1"
b10 K
0T
1L#
1J
1I"
1/
b10011001 )
1."
1a#
1D
1C"
1[#
1>
1="
b11 i"
1x"
b1111 0
b1111 /"
1u"
1U#
b1 m"
b1111 M#
0S"
b1 *#
13#
15
0;
0A
b1 ,
0G
0:"
0@"
b0 +"
0F"
0Y"
0_"
b0 J"
0e"
0X#
0^#
b1001100000000000100100001 !
b1001100000000000100100001 (
b0 I#
0d#
1R"
b1 +#
12#
04
b1 .
13
1:
1@
b1110 -
1F
19"
1?"
b1110 ,"
1E"
1X"
1^"
b1111 K"
1d"
b1 k"
1p"
b1 K#
1P#
1W#
1]#
b1110 J#
1c#
1P"
1o"
10#
1O#
11
16
1<
1B
15"
1;"
1A"
1T"
1Z"
1`"
1n"
1N#
1S#
1Y#
1_#
b1 H"
b1 g"
b1 (#
b1 G#
b1111 *
b1111 ("
b1110 G"
b1 f"
b1111 F#
b10001000100010001000100010001 $
b10001000100010001000100010001 '
b11110000000111101111000000001111 #
b11110000000111101111000000001111 &
#50
